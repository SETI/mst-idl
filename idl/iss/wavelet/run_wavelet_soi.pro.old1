if !d.name eq 'X' then device, decomposed=0
if !d.name eq 'PS' then !p.font = 1 else !p.font = -1
if !d.name eq 'PS' then !p.thick = 2 else !p.thick = 1
if !d.name eq 'PS' then !p.charsize = 1.5 else !p.charsize = 1
dir = '/home/adeona/images/SOI/SOISPTURN/'
!p.charsize=1.5
;radscan_long = 1
wavelength = 0
wake = 0
yr = 0
plotsep = 1
s0x = 1
tit = ''
minlam = 2.39865 & maxlam = 49.4469 & j = 100
param = 6
rpan = 133584.6
lambda = [ 1, 2, 5, 10, 15, 30, 60 ]
nwakes = 0
rsxr = 0
plot_ring_rads = 1
whichrr =  0
order1 = 0
atlas54 = 0

;; Some wave
;imn = 0
;some_wave = 1
;minlam = 1.5
;m = 9
;rres = 128000./60330
;sigma = 43.8

;; Voyager RSS 130K
;vgr = 1
;noradscan = 1
;restore, '~/Data/images/VGR_RSS/KM001/vgr_rss_130.sav'
;;rsxr = [ 3850, 4400 ]
;rsxr = [ 2930, 3405 ]
;filenames = '' & imn = 0
;frequency = 1
;param = 9
;wake = 1
;nwakes = 3
;xxmax = 400
;theta = 159.4 * !pi / 180

;; Voyager PPS 130K
;vgr = 1
;noradscan = 1
;;restore, '~/Data/images/VGR_PPS/KM001/vgr_pps_130.sav'
;restore, '~/Data/images/VGR_PPS/KM000_2/vgr_pps_130.sav'
;(*data.tau)[where(*data.tau gt 2)] = 1.25
;rsxr = [ 3000, 3410 ]
;filenames = '' & imn = 0
;;frequency = 1
;;yr = [ 0,.75 ]
;yr = [ .1, 4.5 ]
;param = 12
;wake = 1
;nwakes = 3
;xxmax = 400
;theta = 29.8 * !pi / 180
;minlam = 1.333333
;maxlam = 300
;j = 500

;; Spilker feature
;imn = 29
;rsxr = [ 500, 910 ]
;minlam = 2.
;param = 12
;plot_ring_rads = 1
;whichrr=indgen(5)

;; Pandora 5:4
;imn = 19
;rsxr = [ 1250, 1442 ]
;minlam = 2.

;; Atlas 7:6
;imn = 22
;rsxr = [ 230, 660 ]
;minlam = 2.

;; Atlas 5:4
;imn = 15
;rsxr = [ 800, 880 ]
;minlam = 1.
;atlas54 = 1

;; Pan 7:6
;imn = 17
;rsxr = [ 650, 710 ]
;minlam = 1.
;rres = resloc(7,7,10)
;atlas54 = 1

;; Prometheus 6:5
;imn = 21
;rsxr = [ 550, 750 ]
;minlam = 2.
;param = 12

;; Prometheus 7:6
;imn = 24
;rsxr = [ 870, 1100 ]
;minlam = 2.

;; Janus 4:3
;imn = 23
;rsxr = [ 100, 510 ]
;minlam = 2.
;param = 12

; Prometheus 9:8
imn = 28
rsxr = [ 870, 1100 ]
minlam = 2.
;atlas54 = 1
rres = resloc(9,9,1)
m = 9

;; Keeler Gap waves
;imn = 39
;rsxr = [ 280, 630 ]
;minlam = 2.
;maxlam = 150

;; Pan wakes, m~200
;imn = 34
;rsxr = [ 920, 1230 ]
;;rsxr = [ 1100, 1150 ]
;minlam = 1.
;j = 500
;param = 12
;lambda = [ 1, 2, 5, 10, 30 ]
;wake = 1
;nwakes = 3
;xxmax = 451
;if not keyword_set(wavelength) then yr = [ 2*!pi/50, 5.1 ]
;yr[1]=2*!pi
;;tit = 'Pan Wakes, Pandora 11:10, Prometheus 15:14'
;theta = 342 * !pi / 180
;order1 = 1

;; Pan wakes, m~80
;imn = 33
;;rsxr = [ 240, 634 ]
;rsxr = [ 450, 634 ]
;minlam = 2.
;j = 500
;;param = 9
;;yr = [.11,3.8]
;wake = 1
;nwakes = 2
;theta = 342 * !pi / 180

;; Mimas 7:4
;imn = 27
;;rsxr = [ 73, 250 ]
;rsxr = [ 73, 500 ]
;s0x = 4
;minlam = 3.
;maxlam = 100.
;;tit = 'Mimas 7:4 Density Wave'
;plot_ring_rads = 1
;;param = 12

;; Janus 2:1 in COMPHILIT
;dir = '/home/adeona/images/00A/COMPHILIT/'
;imn = 14
;rsxr = [ 125, 500 ]
;maxlam = 150

;; Janus 2:1
;imn = 10
;rsxr = [ 240, 425 ]
;;rsxr = [ 240, 409.5 ]
;s0x = 12
;xxmax = 1276
;param = 4
;;maxlam=150

;; Outer B Ring Junk
;imn = 13
;rsxr = [ 100, 525 ]

;; Janus 4:3
;imn = 23
;rsxr = [ 200, 510 ]
;minlam = 2.

;; Janus 9:7
;imn = 27
;rsxr = [ 260, 420 ]
;s0x = 4

if not keyword_set(vgr) then restore, dir+'stretch.sav'

image_name=dir+filenames[imn]
.run restore_radscan
if keyword_set(radscan_long) then xs = 1500 else xs = 640
if !d.name eq 'X' and keyword_set(radscan_long) then window, xs=xs, ys=512
if keyword_set(vgr) then radi = *data.radius
if keyword_set(vgr) then val = *data.tau
if keyword_set(some_wave) then restore, '~/idl/iss/density_wave/some_wave.sav'
thoukm = min(radi) - (min(radi) mod 1000)
if keyword_set(rsxr) then radscan_xr=rsxr else radscan_xr=[min(radi),max(radi)]-thoukm
;.run plot_radscan

x0 = max(where( radi-thoukm le radscan_xr[0], count ))
if x0 ne 0 then x0 = x0 - 1
if count eq 0 then x0 = radi[0]-thoukm
x1 = max(where( radi-thoukm lt radscan_xr[1], count ))
r = radi[x0:x1]-thoukm
if imn eq 27 then r = r - 20
if imn eq 29 then r = r + 10
if imn eq 33 then r = r + 6
if imn eq 34 then r = r + 15
v = val[x0:x1]
nt = n_elements(r)
dt = mean( r[1:nt-1] - r[0:nt-2] )
;s0 = 2*dt*s0x
;dj = .125/2
;j = alog2(nt*dt/s0)/dj/1.5
;s0 = alog2(minlam)
;dj = (alog2(maxlam)-s0)/(j-1)
s0 = minlam * (param+sqrt(2+param^2)) / 4 / !pi
dj = alog2(maxlam/minlam) / j
xtit='Radius - '+strtrim(long(abs(thoukm)),2)+' km'

wave = wavelet( v, dt, /pad, s0=s0, j=j, dj=dj, param=param, period=period, scale=scale, coi=coi, signif=signif )

_period = period
vv = (v-min(v))/(max(v)-min(v))*(max(period)-min(period))/4+min(period)
vv = 2.^vv
if not keyword_set(wavelength) then period = 2*!pi / period
if keyword_set(frequency) then period = period / 2 / !pi
if not keyword_set(wavelength) then vv = max(period) - (v-min(v))/(max(v)-min(v))*(max(period)-min(period))/4
if keyword_set(wavelength) then ytit='Wavelength (km)' else  ytit='Wavenumber (radians/km)'
if keyword_set(wavelength) then ys=1 else ys=9
if keyword_set(wavelength) then xma=[10,3] else xma=[10,6]
if keyword_set(wake) then r = r + thoukm - rpan
;if keyword_set(wake) then xtit = 'Radial Distance from Pan (km)
if keyword_set(wake) then wakepredict = 2*rpan*theta/3/r^2
if nwakes gt 1 then for jj=1,nwakes-1 do wakepredict = [ [wakepredict], [2*rpan*(theta+jj*2*!pi)/3/r^2] ]
if keyword_set(fakewake) then wakepredict = [ [wakepredict], [2*rpan*(theta+.6666*2*!pi)/3/r^2] ]
if keyword_set(fakewake) then nwakes = nwakes + 1
if keyword_set(wake) then r = r - thoukm + rpan
if keyword_set(wavelength) then wakepredict = 2*!pi/wakepredict
if keyword_set(frequency) then wakepredict = wakepredict / 2 / !pi
if keyword_set(plotsep) then yma=[4,-15/!p.charsize] else yma=[4,2]
if keyword_set(plotsep) then !p.multi=[0,1,2] else !p.multi=0
if keyword_set(vgr) then _v = smooth(v,5) else _v=v
if keyword_set(plotsep) then plot, r, _v, /xs, /ys, xma=xma, yma=[15/!p.charsize,2], $
         xtickn=replicate(' ',20), ytit='I/F', tit=tit
if keyword_set(plotsep) then tit=''
if not keyword_set(yr) then yr = [ min(period), max(period) ]
loadct, 0
;contour, (abs(wave^2))^(1./4), r, period, /xs, ys=ys, xma=xma, yma=yma, $
contour, alog(abs(wave^2)), r, period, /xs, ys=ys, yr=yr, xma=xma, yma=yma, $
         /fill, nlevels=15, ylog=wavelength, xtit=xtit, ytit=ytit, tit=tit
signif = rebin(transpose(signif),n_elements(r),n_elements(period))
;contour, (abs(wave)^2)/signif, r, period, /overplot, level=1, c_annot='95%'
plots, r, coi, noclip=0
for jj=-1,1,2 do polyfill, [r[0],r,r[nt-1],r[0]], [yr[1],coi,yr[1],yr[1]], /line_fill, noclip=0, orient=jj*45, /data, spacing=.25
if not keyword_set(wavelength) then axis, yaxis=1, yticks=n_elements(lambda)-1, $
         ytickv = 2*!pi/lambda, ytickn = strtrim(lambda,2), /ys, $
         ytit='Wavelength (km)'
if not keyword_set(plotsep) then oplot, r, vv

if keyword_set(plot_ring_rads) then jimg = imn
.run restore_ring_rads
if keyword_set(plot_ring_rads) and keyword_set(whichrr) then ring_rads=ring_rads[whichrr]
if keyword_set(plot_ring_rads) and keyword_set(whichrr) then ring_rads_legend=ring_rads_legend[whichrr]
if imn eq 27 then ring_rads = [ ring_rads, resloc(9,8,3) ]
if imn eq 27 then ring_rads_legend = [ 'Mi 7:4 (ee''!U2!N)', ring_rads_legend[1:n_elements(ring_rads)-1], 'Ep 9:7!C' ]
if imn eq 33 then ring_rads_legend[[16,27]] = '!C'+ ring_rads_legend[[16,27]]
if imn eq 33 and n_elements(ring_rads) ne 41 then stop, 'Ring_rads has changed!'
if imn eq 33 then ring_rads = ring_rads[15:31]
if imn eq 33 then ring_rads_legend = ring_rads_legend[15:31]
if imn eq 33 then ring_rads = [ ring_rads, resloc(11,10,3) ]
if imn eq 33 then ring_rads_legend = [ ring_rads_legend, 'Ep 11:9' ]
if imn eq 39 then ring_rads = vec_remove( ring_rads, [7,8] )
if imn eq 39 then ring_rads_legend = vec_remove( ring_rads_legend, [7,8] )
if keyword_set(plot_ring_rads) then solid_diamonds
if keyword_set(plot_ring_rads) then oplot, ring_rads-thoukm, replicate(yr[0]+.05,n_elements(ring_rads)), ps=8, noclip=1
if imn eq 33 or imn eq 39 then align = 0 else align = .5
if imn eq 33 or imn eq 39 then orientation = 30 else orientation = 0
if keyword_set(plot_ring_rads) then xyouts, ring_rads-thoukm, replicate(yr[0]+.1,n_elements(ring_rads)), ring_rads_legend, chars=!p.charsize/2, align=align, orientation=orientation
;if imn eq 27 then oplot, [_ring_rads[144]-thoukm], [yr[0]+.05], ps=8, noclip=1
;if imn eq 27 then xyouts, _ring_rads[144]-thoukm+5, [yr[0]+.05], 'Mi 7:4 (eI''!U2!N)', chars=!p.charsize/2
if imn eq 27 then oplot, [_ring_rads[146]-thoukm], [yr[0]+.05], ps=8, noclip=1
if imn eq 27 then xyouts, _ring_rads[146]-thoukm+5, [yr[0]+.05], _ring_rads_legend[146], chars=!p.charsize/2
;Can also plot resonance location at rsxr[0]-60+thoukm and if imn eq 27 then arrow, ring_rads[0]-thoukm-[5], yr[0]+[.05], ring_rads[0]-thoukm-[15], yr[0]+[.05], /data, hsize=5

; Print with explanatory colors for Prometheus 9:8
if imn eq 28 then axis, xaxis=0, /xs, xtit=xtit, co=purple()
if imn eq 28 then axis, yaxis=0, /ys, ytit=ytit, co=green()
if imn eq 28 then axis, yaxis=1, yticks=n_elements(lambda)-1, $
         ytickv = 2*!pi/lambda, ytickn = strtrim(lambda,2), /ys, $
         ytit='Wavelength (km)', co=cyan()
if imn eq 28 then if keyword_set(plot_ring_rads) then oplot, ring_rads-thoukm, replicate(yr[0]+.05,n_elements(ring_rads)), ps=8, noclip=1, co=red()
if imn eq 28 then if keyword_set(plot_ring_rads) then xyouts, ring_rads-thoukm, replicate(yr[0]+.1,n_elements(ring_rads)), ring_rads_legend, chars=!p.charsize/2, align=align, orientation=orientation, co=red()


; At each location, the peak wavenumber as weighted by wavelet power.
kmax = rebin( reform(alog(period),1,j+1), nt, j+1 ) * abs(wave^2)
kmax = total(kmax,2) / total(abs(wave^2),2)
kmax = exp(kmax)
;oplot, r, kmax
; ...or, the derivative of the weighted average phase for each location.
;if keyword_set(_totphase) then oplot, r, deriv(smooth(_totphase,150,/edge))/(r[1]-r[0])*!pi/180
;if keyword_set(_totphase) then oplot, r, deriv(_totphase)/(r[1]-r[0])*!pi/180

if keyword_set(kfit1) then oplot, r[xx0:xx1], poly( r[xx0:xx1], kfit1 )
if keyword_set(kfit1) and imn eq 28 then oplot, r[xx0:xx1], 2*poly( r[xx0:xx1-75], kfit1 ), l=3
if keyword_set(some_wave) then oplot, r, 2*!pi*(m-1) / (3.08*rres^4*sigma) * r, l=2

.run atlas54
stop
.run wavelet_wake
.run wavelet_animate
.run j21
