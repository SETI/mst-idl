function j2000_constants, exact_sday=exact_sday

; Find constants needed to convert from AU-DAY to KM-S

; Following are five six-element Cartesian vectors in AU-D and in KM-S.  
; They are for the five planets Jupiter through Pluto, at J2000 epoch. 
aud = [ $
   [ 4.001176881169791E+00, 2.938576333872385E+00, -1.017852686177660E-01, $
     -4.568313981514633E-03, 6.443205812845913E-03, 7.557967268677444E-05 ], $
   [ 6.406411338954024E+00, 6.569989933607716E+00, -3.690746350208829E-01, $
     -4.292350202821862E-03, 3.890315849639042E-03, 1.029479669628609E-04 ], $
   [ 1.443185959820827E+01, -1.373431239104947E+01, -2.381371059024103E-01, $
     2.678104817216872E-03, 2.672697132646849E-03, -2.477197867319352E-05 ], $
   [ 1.681205598309908E+01, -2.499177017605868E+01, 1.272291482001320E-01, $
     2.579275595383008E-03, 1.776898889093330E-03, -9.590889584797773E-05 ], $
   [ -9.875349359480344d+00, -2.795878518004758E+01, 5.850442676803245E+00, $
     3.028751447863036E-03, -1.537777883135224E-03, -7.122063320435069E-04 ] ]
kms = [ $
   [ 5.985675416810571E+08, 4.396047624102740E+08, -1.522685945292926E+07, $
     -7.909838475492053E+00, 1.115613275492619E+01, 1.308629409891688E-01 ], $
   [ 9.583854950782003E+08, 9.828565045290189E+08, -5.521277952518207E+07, $
     -7.432019104192507E+00, 6.735913974785293E+00, 1.782499612223543E-01 ], $
   [ 2.158975466003428E+09, -2.054623889106018E+09, -3.562480397551775E+07, $
     4.637022895173076E+00, 4.627659722753586E+00, -4.289161183232193E-02 ], $
   [ 2.515047777009509E+09, -3.738715603137218E+09, 1.903320966056943E+07, $
     4.465904363362956E+00, 3.076623729647749E+00, -1.660621134164625E-01 ], $
   [ -1.477331236507990d+09, -4.182574730042205E+09, 8.752137670495198E+08, $
     5.244152401071685E+00, -2.662596029082674E+00, -1.233154522758750E+00 ] ]

; AU = 149597870 +- 4 km
au = mean((kms/aud)[0:2,*])
sigma_au = stddev((kms/aud)[0:2,*])
auoversday = mean((kms/aud)[3:5,*])
sigma_auoversday = stddev((kms/aud)[3:5,*])
sday = au / auoversday
sigma_sday = sqrt( ( sigma_au / auoversday )^2 + $
                   ( au * sigma_auoversday / auoversday^2 )^2 )
if not keyword_exists(exact_sday) then exact_sday = 1
if keyword_set(exact_sday) then begin
  sday = 86400.0d0
  sigma_sday = 0.0d0
endif

return, [ au, sday ]

end
