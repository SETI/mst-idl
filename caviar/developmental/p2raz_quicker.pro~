
pro p2raz_quicker,cmat,et,polera,poledec,sc,RA,dec,radius,z,$
                  primary=primary,rhea=rhea

capN=(polera+90.0d0)*2.0d0*!dpi/360.0
capJ=(90.0d0-poledec)*2.0d0*!dpi/360.0

rot=dblarr(3,3)

rot[0,0]=cos(capN)
rot[1,0]=-sin(capN)*cos(capJ)
rot[2,0]=sin(capN)*sin(capJ)
rot[0,1]=sin(capN)
rot[1,1]=cos(capN)*cos(capJ)
rot[2,1]=-cos(capN)*sin(capJ)
rot[0,2]=0.0
rot[1,2]=sin(capJ)
rot[2,2]=cos(capJ)

szx = size(RA) 
szy = size(dec) 
if (where(szx ne szy))[0] ne -1 then stop, szx, szy 
nn = szx[szx[0]+2] 
if nn gt 1 then begin 
  RA = reform(RA,nn) 
  dec = reform(dec,nn) 
endif 

rho_J2000=dblarr(nn,3)
xyz_J2000=dblarr(nn,3)

r=1.0d0*cos(2.0d0*!dpi*dec/360.0d0)
rho_J2000[*,0]=r*cos(2.0d0*!dpi*RA/360.0d0)
rho_J2000[*,1]=r*sin(2.0d0*!dpi*RA/360.0d0)
rho_J2000[*,2]=(sin(2.0d0*!dpi*dec/360.0d0))/1.0d0

trot=transpose(rot)

rho=trot##rho_J2000

;light_time=0.0d0
light_time = reform(dblarr(nn))
done = intarr(nn)

outofplane = 0

;for i=0,19 do begin
if not keyword_set(primary) then begin
  if keyword_set(rhea) then primary=605L else primary=699L
endif
for i=0,0 do begin
  ; Note that setting the aberration correction argument (abcorr)
  ; to 'LT' corrects for light travel time on the fly.  'CN' uses
  ; a "converged Newtonian" which we probably don't need.  Adding
  ; '+S' causes it to do stellar aberration as well.  See spk.req
  ; Change 14 Oct 2005: Use CN+S, since manual abcorr never fully implemented.
  if i eq 0 then begin
    cspice_spkez,primary,et-mean(light_time),'J2000','CN+S',sc,state,ltime
    ;cspice_spkez,primary,et-mean(light_time),'J2000','NONE',sc,state,ltime
    xyz_J2000 = rebin( reform(-state[0:2],1,3), nn, 3 )
  endif else for j=0l,nn-1 do if done[j] ne 1 then begin
    cspice_spkez,primary,et-light_time[j],'J2000','CN+S',sc,state,ltime
    ;cspice_spkez,primary,et-light_time[j],'J2000','NONE',sc,state,ltime
    xyz_J2000[j,*]=-state[0:2]
  endif

  xyz=trot##xyz_J2000

  rho_p=rho
  rho_p[*,0]=sqrt(rho[*,0]^2+rho[*,1]^2)
  rho_p[*,1]=0
  xy=sqrt(xyz[*,0]^2+xyz[*,1]^2)
  th_xyz=atan(xyz[*,1],xyz[*,0])
  th_rho=atan(rho[*,1],rho[*,0])
  xyz_p=xyz
  xyz_p[*,0]=xy*cos(th_xyz-th_rho)
  xyz_p[*,1]=xy*sin(th_xyz-th_rho)

  length=abs(xyz_p[*,0]/rho_p[*,0])

  _light_time = light_time
  light_time = (length*v_mag(rho_p))/299792.458d0
  foo = where( light_time eq _light_time, donecount )
  if donecount gt 0 then done[foo] = 1
  if donecount eq nn then goto, skip

endfor

skip:                                                                                
xyz_zp = xyz_p + ( rebin(length,nn,3) * rho_p )

radius=abs(xyz_zp[*,1])

z=xyz_zp[*,2]


if nn gt 1 then if szx[0] eq 2 then begin 
  radius = reform( radius, szx[1], szx[2] )
  z = reform( z, szx[1], szx[2] ) 
  RA = reform( RA, szx[1], szx[2] ) 
  dec = reform( dec, szx[1], szx[2] ) 
endif 

end

