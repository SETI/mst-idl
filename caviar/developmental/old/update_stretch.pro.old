print, 'IMPORTANT NOTE:  This module may not work properly if there are any defined variables.  Either run this module in a new IDL session or type ".reset"'

if not keyword_set(findfile('stretch.sav')) then begin

  reply = ''
  while reply eq '' do begin
    print, 'Search for only images with "_cal"? (y/n)'
    read, reply
    if reply eq 'y' then cal='_cal' else if reply eq 'n' then cal='' else reply=''
  endwhile

  new = 1
  ff = findfile('*'+cal+'.IMG')
  nadd = n_elements(ff)
  filenames = strarr(nadd)
  rmin = fltarr(nadd)
  rmax = fltarr(nadd)
  lmin = fltarr(nadd)
  lmax = fltarr(nadd)
  stretchmin = fltarr(nadd)
  stretchmax = fltarr(nadd)
  add = indgen(nadd)

endif else begin

  restore, 'stretch.sav'

  new = 0
  cal = strpos(filenames[0],'cal')
  if cal eq -1 then cal = '' else cal = '_cal'
  ff = findfile('*'+cal+'.IMG')
  nff = n_elements(ff)
  if nff lt n_elements(filenames) then stop, 'Files listed in filenames not found.'
  if nff gt n_elements(filenames) then begin
    proceed = 1
    add = 0
    for j=0,nff-1 do if (where(ff[j] eq filenames))[0] eq -1 then add=[add,j]
    if nff-n_elements(add)+1 ne n_elements(filenames) then stop, $
     	   			   'Files listed in filenames not found.'
    add = clip(add)
    nadd = n_elements(add)
    filenames = [ filenames, strarr(nadd) ]
    rmin = [ rmin, fltarr(nadd) ]
    rmax = [ rmax, fltarr(nadd) ]
    lmin = [ lmin, fltarr(nadd) ]
    lmax = [ lmax, fltarr(nadd) ]
    stretchmin = [ stretchmin, fltarr(nadd) ]
    stretchmax = [ stretchmax, fltarr(nadd) ]
  endif

endelse

if keyword_set(new) or keyword_set(proceed) then begin
  for jjj=0,nadd-1 do begin
    image_name = ff[add[jjj]]
    print, '------'
    print, strtrim(jjj,2)+' / '+strtrim(nadd-1,2)+'   '+image_name
    print, '------'
    cal = strpos( image_name, '_cal' )
    if cal eq -1 then noncalfn = image_name else noncalfn = strmid(image_name,0,cal)+strmid(image_name,cal+4,strlen(image_name))
    mark_badlines, noncalfn
    cspice_clpool
    @caviar_loadonly
    get_radarray, cam_params, cmat, nl, et, polera, poledec, sc, radarray, lonarray
    filenames[add[jjj]]=image_name
    rmin[add[jjj]]=min(radarray) & rmax[add[jjj]]=max(radarray)
    lmin[add[jjj]]=min(lonarray) & lmax[add[jjj]]=max(lonarray)
    if lmin[add[jjj]] lt 10 and lmax[add[jjj]] gt 350 then begin
      lonarray[where(lonarray gt 180)] = lonarray[where(lonarray gt 180)] - 360
      lmin[add[jjj]] = min(lonarray) & lmax[add[jjj]] = max(lonarray)
    endif
    save, filenames, lmax, lmin, nostars, ring_npoints, rmax, rmin, $
    	  stretchmax, stretchmin, usehistogram, basiconly, $
          filename='stretch.sav'
  endfor
endif

end
